# Load plugins.
set -g @plugin 'tmux-plugins/tmux-yank'        # Cross-platform support for clipboard.
# set -g @plugin 'tmux-plugins/tmux-resurrect'   # Save/Restore sessions
set -g @plugin 'tmux-plugins/tmux-continuum'   # Auto Save/Restore
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

set-option -g set-titles on
set-option -g set-titles-string '#S #I/#P #W'
set-window-option -g automatic-rename on


# Restore using continuum.
set -g @continuum-restore 'on'

# Shell management.

    # Set the default shell, and set the default command to use our shell (this
    # means we source things properly, show the correct PS1 etc).
    set -g default-shell ${SHELL} 
    set -g default-command ${SHELL}

# Mouse management.

    # Enable mouse mode (tmux 2.1 and above)
    set -g mouse on

# Colour management (yikes).

    # Use 256 colours.
    set-option -ga terminal-overrides ",xterm-256color:Tc"
    set-option -g default-terminal "screen-256color"

# Keyboard Management.

    # Don't wait for an escape sequence after hitting
    # Esc. fixes insert mode exit lag in vim.
    set -sg escape-time 0

# Clipboard / Copy / Paste
# Note: This is heavily OS dependent, which is why we have separate versions
# for OSX, Ubuntu etc. I'm trying out tmux-yank for this but it is still work in
# progress.

    # Use vim keybindings in copy mode
    setw -g mode-keys vi

    # Setup 'v' begin/end selection as in Vim.
    bind-key -T copy-mode-vi v send-keys -X begin-selection

# Pane and Window Management.

    # Open new panes and splits in the same working directory.
    bind c new-window -c "#{pane_current_path}"

    # Set the name of the window initially, but then don't let tmux change it.
    # The name can still be set at any time with Ctrl+B + ,
    set-option -g allow-rename off

    # Start windows and panes at 1.
    set -g base-index 1
    set -g pane-base-index 1

    # When we add/remove windows, renumber them in sequential order.
    set -g renumber-windows on

    # Split panes using | and -
    bind | split-window -h -c "#{pane_current_path}"
    bind - split-window -v -c "#{pane_current_path}"

    # Ctrl+B h/l to swap windows left/right, i.e. moving the tabs around.
    bind-key h swap-window -t -1\; select-window -t -1
    bind-key l swap-window -t +1\; select-window -t +1

    # Smart pane switching with awareness of Vim splits, as well as Ctrl+HJKL in
    # the fzf command.
    # See: https://github.com/christoomey/vim-tmux-navigator
    # See: https://www.bugsnag.com/blog/tmux-and-vim
    is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
    bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                              tmux select-pane -L"
    bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                             ($is_fzf && tmux send-keys C-j) || \
                             tmux select-pane -D"
    bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                              ($is_fzf && tmux send-keys C-k)  || \
                              tmux select-pane -U"
    bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                              tmux select-pane -R"

    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
    if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
        "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
    if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
        "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    # bind-key -T copy-mode-vi C-\ select-pane -l

    # Meta + h/l to cycle through tabs.
    bind-key -n M-h previous-window
    bind-key -n M-l next-window

    # Ctr + Meta + h/j/k/l to resize panes.
    bind-key -n C-M-h resize-pane -L 2
    bind-key -n C-M-j resize-pane -D 2
    bind-key -n C-M-k resize-pane -U 2
    bind-key -n C-M-l resize-pane -R 2

    # Enable focus events, which are needed to keep vim's focus events working when
    # vim is running inside tmux.
    set -g focus-events on

## Status bar design
set -g status-justify left
set -g status-bg default
set -g status-interval 2

set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none
set-window-option -g monitor-activity off

set -g status-position bottom

set -g status-right-length 50
set -g status-left-length 30

c_yelow="#fbbc04"

set -g status-left ' #[bold]s: #[none]#{session_name} #[bold]w: #[none]#{active_window_index}/#{last_window_index} #[fg=colour231 bold][#W]'
set -g status-right '%Y-%m-%d %H:%M:%S #{tmux_mode_indicator} '

set -g window-status-format ''
set -g window-status-current-format ''


run '~/.tmux/plugins/tpm/tpm'